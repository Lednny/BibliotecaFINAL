//List<Cliente> clientes = new ArrayList<>();
//    // Funciones de soporte para < PRESTAMO >
//private static void inicializarDatos(StockBook stockB, List<Cliente> clientes) {
//    //  Libros
//    stockB.getBooks();

    // Agregar clientes
    

//}

    // Funcion < Ejecución de prestamo >
/* 
    public void lendBook() {
        Scanner scanner = new Scanner(System.in);
        inicializarDatos();

        while (true) {
            System.out.println("Menú de opciones:");
            System.out.println("1. Registrar préstamo");
            System.out.println("2. Ver préstamos");
            System.out.println("3. Salir");
            System.out.print("Seleccione una opción: ");
            int opcion = scanner.nextInt();
            scanner.nextLine(); // Consumir el salto de línea

            switch (opcion) {
                case 1:
                    registrarPrestamo(scanner);
                    break;
                case 2:
                    verPrestamos();
                    break;
                case 3:
                    System.out.println("Saliendo del sistema...");
                    return;
                default:
                    System.out.println("Opción no válida. Intente de nuevo.");
                    break;
            }
        }
    }
    
    private static void registrarPrestamo(Scanner scanner, List<Book> stockB) {
        System.out.println("Lista de libros:");
        for (int i = 0; i < stockB.size(); i++) {
            System.out.println((i + 1) + ". " + stockB.get(i));
        }
        System.out.print("Seleccione el número del libro a prestar: ");
        int indiceLibro = scanner.nextInt() - 1;
        scanner.nextLine();  // Consumir el salto de línea

        if (indiceLibro < 0 || indiceLibro >= stockB.size()) {
            System.out.println("Número de libro no válido.");
            return;
        }

        Book libro = stockB.get(indiceLibro);
        if (!libro.isDisponible()) {
            System.out.println("El libro no está disponible.");
            return;
        }

        System.out.println("Lista de clientes:");
        for (int i = 0; i < clientes.size(); i++) {
            System.out.println((i + 1) + ". " + clientes.get(i));
        }
        System.out.print("Seleccione el número del cliente: ");
        int indiceCliente = scanner.nextInt() - 1;
        scanner.nextLine();  // Consumir el salto de línea

        if (indiceCliente < 0 || indiceCliente >= clientes.size()) {
            System.out.println("Número de cliente no válido.");
            return;
        }

        Cliente cliente = clientes.get(indiceCliente);

        System.out.print("Ingrese la fecha de préstamo (YYYY-MM-DD): ");
        String fechaPrestamo = scanner.nextLine();
        System.out.print("Ingrese la fecha de devolución (YYYY-MM-DD): ");
        String fechaDevolucion = scanner.nextLine();

        Prestamo prestamo = new Prestamo(libro, cliente, fechaPrestamo, fechaDevolucion);
        prestamos.add(prestamo);

        System.out.println("Préstamo registrado exitosamente.");
    }
*/




//          ##//#//#    endregion   #\\#\\##
